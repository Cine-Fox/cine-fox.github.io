import{_ as s,c as e,o as a,a1 as t,a9 as i}from"./chunks/framework.CdEAfm75.js";const m=JSON.parse('{"title":"NVMe SSD Hat","description":"","frontmatter":{},"headers":[],"relativePath":"nvme.md","filePath":"nvme.md","lastUpdated":1719825753000}'),n={name:"nvme.md"},l=t('<h1 id="nvme-ssd-hat" tabindex="-1">NVMe SSD Hat <a class="header-anchor" href="#nvme-ssd-hat" aria-label="Permalink to &quot;NVMe SSD Hat&quot;">‚Äã</a></h1><p>Use NVMe SSD Hat on Pi</p><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">‚Äã</a></h2><p><img src="'+i+`" alt="nvme"></p><p>After Pi5&#39;s PCIE information has been published, there are many NVME SSD Hat on the market (like <em>52Pi</em>, <em>WaveShare</em>, <em>Geekworm</em> and so on), all of which work well and have very fast read and write speeds.</p><p><strong>But I actually don&#39;t recommend this way for Cine Fox.</strong></p><p>I have also used this way for storage before, but it is very inconvenient because you need to consider how to transfer the files to the computer for editing. Whether it is network file sharing or using file transfer software, it is very slow. And I cannot quickly remove the NVMe SSD to replace another one.</p><p>Of course, if you have a way to solve the problem of convenience, then this method is also suitable for you.</p><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">‚Äã</a></h2><ol><li>Install hat and NVMe SSD, then run</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /boot/firmware/config.txt</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Enable the PCIe External connector.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dtparam</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">pciex1</span></span></code></pre></div><p>Press <strong>Ctrl-O</strong>, then enter, to write the change to the file.</p><p>Press <strong>Ctrl-X</strong> to exit nano (the editor).</p><ol start="2"><li>run command</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fdisk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/nvme0n1</span></span></code></pre></div><p>You can see commands by m.<br> Choose <strong>‚Äún‚Äù</strong> to create a new partition, then <strong>‚Äúp‚Äù</strong> then <strong>‚Äú1‚Äù</strong> to create a new primary partition.<br> Just <strong>use defaults</strong>, or just press enter when you asked about sector numbers.<br> Then <strong>‚Äúw‚Äù</strong> to write the data to the disk.<br> (in my case I did&#39;t need &quot;w&quot;)</p><ol start="3"><li>make file system</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># reference site shows /dev/nvme0n1p1 but in may case, it was /dev/nvme0n1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mkfs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ext4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/nvme0n1p1</span></span></code></pre></div><p>You can pick which file systems you want, but ext4 might be the best, I think.</p><ol start="4"><li>make mount point</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /media/RAW</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chmod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 777</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /media/RAW</span></span></code></pre></div><ol start="5"><li>mount</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mount</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/nvme0n1p1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /media/RAW</span></span></code></pre></div><p>Done!</p><blockquote><p>üëÜ Part of the above content comes from <a href="https://gist.github.com/a-maumau/b826164698da318f992aad5498d0d934" target="_blank" rel="noreferrer">here</a>, thanks to this article</p></blockquote><h2 id="mount-ssd-when-boot" tabindex="-1">Mount SSD when Boot <a class="header-anchor" href="#mount-ssd-when-boot" aria-label="Permalink to &quot;Mount SSD when Boot&quot;">‚Äã</a></h2><p>After creating the partition, you only need to execute this command. You can add it to the service or use crontab to complete it.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mount</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/nvme0n1p1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /media/RAW</span></span></code></pre></div>`,29),o=[l];function h(p,r,d,k,c,g){return a(),e("div",null,o)}const v=s(n,[["render",h]]);export{m as __pageData,v as default};
